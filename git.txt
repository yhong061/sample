github: yhong061+0714
git clone https://github.com/yhong061/sample.git
git clone https://github.com/yhong061/self.git

git config --global user.email yhong@actions-semi.com
git config --global user.name yhong061
ssh-keygen -t rsa -C yhong061


git add file
git commit -sm ""
git push origin master

git pull

==============================
https:
echo "# self" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/yhong061/self.git
git push -u origin master

==============================
ssh:
echo "# self" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:yhong061/self.git
git push -u origin master

==============================
git remote add origin https://github.com/yhong061/self.git
git push -u origin master

==============================
git remote add origin git@github.com:yhong061/self.git
git push -u origin master

==============================
==============================
git clone https://github.com/yhong061/sample.git
cd sample
vim git.txt 
git add git.txt 
git commit -sm "add git.txt"
cat .git/config
git push origin  master 

==============================
git remote -v  //list remote name

==============================

==============================
git log --oneline //display log in one line
git log --graph   //display log in a graph mode
git log -all      //display all branchs log
git blame kernel/xc6130_reg/readme.txt  //list file's modify author per lines

==============================
git reflog  //list HEAD pointer's trajectory

==============================
git add -p readme.txt   //separate readme.txt's modification to serial parts
//s(separate) --> y(yes) --> n(no)

==============================
git rebase -i HEAD~2  //compress the last 2 commits to 1

==============================
git stash   //stash current work env.
git stash list  //list stash
git stash apply  //restory stash, default is stash@{0}
git stash apply stash@{2}   //restory stash's name stash@{2}

==============================
git fsck --lost-found  //list the lost commit

==============================
//clone remote a branch not remote all branchs
git init
git remote add -t BRANCH_NAME_HERE -f origin REMOTE_REPO_URL_PATH_HERE
git checkout BRNACH_NAME_HERE

==============================
//save the changed filename to "update.zip" between serial commits
git archive -o ../updated.zip HEAD $(git diff --name-only HEAD^)  //save the changed filename between HEAD and HEAD^
git archive -o ../updated.zip NEW_COMMIT_ID $(git diff --name-only OLD_COMMIT_ID NEW_COMMIT_ID)  //save the changed file between NEW and OLD commit ID

==============================
git reset --hard commit-id  //回退到指定id, 代码为id对应地情况
git reset --soft commit-id  //回退到指定id, 代码为HEAD到id之间地所有修改

==============================
fatal: remote error:  
You can't push to git://github.com/user_name/user_repo.git  
Use git@github.com:user_name/user_repo.git 
------------------------------
解决办法:
git remote rm origin
git remote add origin git@github.com:yhong061/self.git
git branch --set-upstream-to=origin/master
git push origin master

==============================
==============================
==============================
==============================
==============================
==============================
==============================
==============================
==============================
==============================
==============================
==============================
==============================
==============================
