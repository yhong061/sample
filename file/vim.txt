===============================================================================

 vim 改变窗口的大小（：help vsp）得到的
 1.改变高度：res n
 2.改变宽度：vertical res n

===============================================================================
cscope

生成索引文件: cscope.out
	find . -name "*.h" -o -name "*.c" -o -name "*.cc" > cscope.files
		//搜索当前目录及子目录的所有*.h,*.c,*.cc的文件，并将文件名保存到cscope.file文件中
	cscope -Rbkq -i cscope.files
		//这个命令会生成三个文件：cscope.out, cscope.in.out, cscope.po.out
			//-b: 只生成索引文件，不进入cscope的界面
			//-q: 生成cscope.in.out和cscope.po.out文件，加快cscope的索引速度
			//-k: 在生成索引文件时，不搜索/usr/include目录
			//-i: 如果保存文件列表的文件名不是cscope.files时，需要加此选项告诉cscope到哪儿去找源文件列表
	ctags -R
		//生成一个tags文件

cscope的命令
	:cs add cscope.out	//添加cscope.out文件
	:cs f g do_fork		//等价于 :tag do_fork
		//g: 查找函数、宏、枚举等的定义
		//c: caller
		//d: 列举此函数中使用的所有函数名

===============================================================================

1. 安装完整的vim
# apt-get install vim-gnome

2. 安装ctags，ctags用于支持taglist，必需！
# apt-get install ctags

3. 安装taglist
#apt-get install vim-scripts
#apt-get install vim-addon-manager // 貌似我在安装vim-scripts的时候，已经附带安装了vim-addon-manager
# vim-addons install taglist

4. 安装pydiction（实现代码补全）
#wget http://www.pythonclub.org/_media/python-basic/pydiction-1.2.zip
#unzip pydiction-1.2.zip
// ~/.vim/after/ftplugin和~/.vim/tools/pydiction/目录默认不存在，需要自行创建
#cp pydiction-1.2/python_pydiction.vim ~/.vim/after/ftplugin
#cp pydiction-1.2/complete-dict ~/.vim/tools/pydiction/complete-dict

5. 编辑配置文件
# vim ~/.vimrc 


let Tlist_Auto_Highlight_Tag=1
"let Tlist_Auto_Open=1
let Tlist_Auto_Update=1
let Tlist_Display_Tag_Scope=1
let Tlist_Exit_OnlyWindow=1
let Tlist_Enable_Dold_Column=1
let Tlist_File_Fold_Auto_Close=1
let Tlist_Show_One_File=1
let Tlist_Use_Left_Window=1
let Tlist_Use_SingleClick=1
nnoremap <silent> <F8> :TlistToggle<CR>
filetype plugin on  "允许插件
autocmd FileType python set omnifunc=pythoncomplete#Complete 
autocmd FileType javascrīpt set omnifunc=javascriptcomplete#CompleteJS 
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags 
autocmd FileType css set omnifunc=csscomplete#CompleteCSS 
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP 
autocmd FileType c set omnifunc=ccomplete#Complete
let g:pydiction_location='~/.vim/tools/pydiction/complete-dict'
set autoindent      "自动缩进
set tabstop=4       "
set shiftwidth=4    "Tab键的宽度
set expandtab
set number          "显示行号
nnoremap <F2> :set nonumber!<CR>:set foldcolumn=0<CR>     "为方便复制，用<F2>开启/关闭行号显示: 
set mouse=a         "鼠标单击改变插入点
set mouse=v         "启用鼠标复制
syntax on           "语法高亮
set hlsearch        "搜索高亮
filetype indent plugin on   "依文件类型设置自动缩进

"自动打开跳到上次的光标位置
if has("autocmd")
      au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif



===============================================================================
vimdiff快捷键:
dp : 当前文件的内容复制到另一个文件
do : 把另一个文件的内容复制到当前行中
] + c  ：查找上一个不同点；
[ + c  ：查找下一个不同点  ；

===============================================================================
vimdiff 比较二进制文件

用法：vimdiff -bd test1.bin test2.bin
补充说明：
ctrl + W +L  ：把输入焦点切换到右边的窗口，激活右边的窗口后输入的命令就是针对右窗口了；
:%!xxd -g 1  ：切换成十六进制的一个字节的模式；
ctrl + W +H  ：把输入焦点切换到左边的窗口 ；
:%!xxd -g 1 ：切换成十六进制的一个字节的模式；

===============================================================================
多列的同时修改:
Ctrl+v --> j/k/h/l 选中多列 --> Shift i 块模式下的插入 --> 块模式下的插入 --> ESC



===============================================================================
===============================================================================




