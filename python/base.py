#!/usr/bin/env python3
# -*- coding: utf-8 -*-

#mycompany
# ├─ web
# │  ├─ __init__.py
# │  ├─ utils.py
# │  └─ www.py
# ├─ __init__.py
# ├─ abc.py
# └─ xyz.py

#安装第三方模块，是通过包管理工具pip完成的
#注意：Mac或Linux上有可能并存Python 3.x和Python 2.x，因此对应的pip命令是pip3
#第三方库都会在Python官方的pypi.python.org网站注册，要安装一个第三方库，可以在官网或者pypi上搜索

#pip install Pillow

#import sys
#sys.path  #显示系统的PATH
#sys.path.append('/Users/michael/my_py_scripts')  #添加搜索目录
#PYTHONPATH  也可以修改PYTHON的PATH


#============================
# int(): 把str转换成整数
# range(100) : 成0-99的整数序列
#     print(len(range(100))) = 100
#============================

#============================
#print
#遇到逗号“,”会输出一个空格
#============================
print('The quick brown fox', 'jumps over', 'the lazy dog') 
print('100 + 200 =', 100 + 200)

#============================
#input
#============================
name = input('please enter your name: ')
print('hello,', name)


#============================
#1. 布尔值可以用and、or和not运算
#2. 等号=是赋值语句，可以把任意数据类型赋值给变量，同
#   一个变量可以反复赋值，而且可以是不同类型的变量
#3. 全部大写的变量名表示常量
#============================
a = 1
print(a)

t_007 = 'T007'
print(t_007)

Answer = True
print(Answer)

#============================
#1. 在内存中创建了一个'ABC'的字符串
#2. 在内存中创建了一个名为a的变量，并把它指向'ABC'
#============================
a = 'ABC'
print(a)

#============================
# /除法计算结果是浮点数，即使是两个整数恰好整除，结
# 果也是浮点数
#
# //，称为地板除，两个整数的除法仍然是整数
# %得到两个整数相除的余数
#============================
print(10/3)   #3.3333333333333335
print(10//3)  #3
print(10%3)   #1

#============================
# %运算符就是用来格式化字符串的
#============================
print('Hello, %s' % 'world')               #Hello, world
print('Age: %s. Gender: %s' % (25, True))  #Age: 25. Gender: True

#============================
# format()，用传入的参数依次替换字符串内的占位符{0}、{1}……
#============================
print('Hello, {0}, 成绩提升了 {1:.1f}%'.format('小明', 17.125)) # Hello, 小明, 成绩提升了 17.1%


#ASCII编码是1个字节

#Unicode编码通常是2个字节, 把ASCII编码变为Unicode编码，只需
#要在前面补0就可以

#UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字
#节，常用的英文字母被编码成1个字节，汉字通常是3个字节，
#只有很生僻的字符才会被编码成4-6个字节。用UTF-8编码就能
#节省空间

#------------------------------------------------------------------
#字符    ASCII       Unicode             UTF-8
#------------------------------------------------------------------
#A       01000001    00000000 01000001   01000001
#------------------------------------------------------------------
#中      x           01001110 00101101   11100100 10111000 10101101
#------------------------------------------------------------------

#python3, 字符串是以Unicode编码的

print('包含中文的str')

#============================
#ord()函数获取字符的整数表示
#chr()函数把编码转换为对应的字符
#============================

print(ord('A'))   #65
print(ord('中'))  #20013
print(chr(66))    #B
print(chr(25991)) #文

#由于Python的字符串类型是str，在内存中以Unicode表示，一个
#字符对应若干个字节。如果要在网络上传输，或者保存到磁
#盘上，就需要把str变为以字节为单位的bytes。

#注意区分'ABC'和b'ABC'，前者是str，后者虽然内容显示得和前
#者一样，但bytes的每个字符都只占用一个字节

#============================
#Unicode表示的str通过encode()方法可以编码为指定的
#把bytes变为str，就需要用decode()
#可以传入errors='ignore'忽略错误的字节
#============================
print('ABC'.encode('ascii'))   #b'ABC'
print('中文'.encode('utf-8'))  #b'\xe4\xb8\xad\xe6\x96\x87'

print(b'ABC'.decode('ascii'))                      #'ABC'
print(b'\xe4\xb8\xad\xe6\x96\x87'.decode('utf-8'))  #中文

print(b'\xe4\xb8\xad\xff'.decode('utf-8', errors='ignore'))  #文

#============================
#计算str包含多少个字符，可以用len()函数, len()函数计算的是
#str的字符数，如果换成bytes，len()函数就计算字节数
#============================
print(len('ABC'))                       #3
print(len('中文'))                      #2
print(len(b'ABC'))                      #3
print(len(b'\xe4\xb8\xad\xe6\x96\x87')) #6
print(len('中文'.encode('utf-8')))      #6

#============================
# 函数
#============================
#变量可以指向函数
f = abs
print(f(-10))  #10

#传入函数
def add(x, y, f):
        return f(x) + f(y)

print(add(-5, 6, abs))

#============================
#============================
